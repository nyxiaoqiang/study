<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.smx.mapper.BlogMapper">
    <cache/>
    <insert id="addBlog" parameterType="com.study.smx.model.Blog">
        insert into blog (id, title, author_name,create_time, views)
        value (#{id}, #{title}, #{authorName}, now(), #{views});
    </insert>

    <select id="getAll" resultType="com.study.smx.model.Blog">
        select * from blog
    </select>

    <delete id="deleteById" parameterType="string">
        delete from blog where id = #{id}
    </delete>

    <!--if-->
    <select id="selectByIf" parameterType="map" resultType="com.study.smx.model.Blog">
        select * from blog where 1=1
        <if test="title != null">
            and title = #{title}
        </if>
        <if test="authorName !=null">
            and author_name = #{authorName}
        </if>
    </select>

    <!--if elseif else-->
    <select id="selectByParams" parameterType="map" resultType="com.study.smx.model.Blog">
        select * from blog
        <where>
            <choose>
                <when test="title != null">
                    title = #{title}
                </when>
                <when test="authorName != null">
                    author_name = #{authorName}
                </when>
                <otherwise>
                    views = #{views}
                </otherwise>
            </choose>
        </where>
    </select>

    <!--1. where标签的作用：如果该标签包含的元素中有返回值，就插入一个where；如果where后面的字符是以AND和OR开头的，就讲他们剔除。-->
    <!--2.set标签的作用：如果该标签包含的元素中有返回值，就插入一个set;如果set后面的字符串是以逗号结尾的，就将这个逗号剔除-->
    <sql id="where-param">
        <if test="title != null">
            and title = #{title}
        </if>
        <if test="authorName != null">
            and author_name = #{authorName}
        </if>
    </sql>

    <select id="testSql" parameterType="map" resultType="com.study.smx.model.Blog" flushCache="true">
        select * from blog where 1 = 1
        <include refid="where-param"></include>
    </select>

    <!--foreach-->
    <select id="queeryByIds" parameterType="map" resultType="com.study.smx.model.Blog">
        select * from blog
        <where>
            <foreach collection="ids" item="id" open="and ("
                     close=")" separator="or">
                id = #{id}
            </foreach>
        </where>
    </select>
</mapper>
